name: Manual Docker Build and Test

on:
  workflow_dispatch:
    inputs:
      run_security_scan:
        description: 'Run security scan'
        required: false
        default: true
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  docker-build-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test Docker Compose configurations
      run: |
        # Test all RFC Docker examples
        rfc_dirs=$(find docker-examples -name "docker-compose.yml" -exec dirname {} \; | sort)
        
        echo "Found RFC Docker examples:"
        echo "$rfc_dirs"
        
        for dir in $rfc_dirs; do
          echo "Testing Docker Compose in $dir"
          cd "$dir"
          
          # Validate docker-compose.yml syntax
          docker compose config > /dev/null
          
          if [ $? -eq 0 ]; then
            echo "✅ $dir: Docker Compose configuration is valid"
          else
            echo "❌ $dir: Docker Compose configuration is invalid"
            exit 1
          fi
          
          cd - > /dev/null
        done
        
        echo "All Docker Compose configurations are valid!"

  security-scan:
    runs-on: ubuntu-latest
    if: ${{ inputs.run_security_scan }}
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: |
        # Run npm audit and capture output
        if ! npm audit --audit-level high; then
          echo "High severity vulnerabilities found in npm packages"
          echo "Please review and update dependencies"
          exit 1
        fi
        
        echo "No high severity vulnerabilities found"

  build-status:
    runs-on: ubuntu-latest
    needs: [docker-build-test, security-scan]
    if: always()
    
    steps:
    - name: Report status
      run: |
        docker_status="${{ needs.docker-build-test.result }}"
        security_status="${{ needs.security-scan.result }}"
        
        echo "## Manual Docker Test Results"
        echo "- Docker Build Test: $docker_status"
        echo "- Security Scan: $security_status"
        
        if [[ "$docker_status" == "success" && ("$security_status" == "success" || "$security_status" == "skipped") ]]; then
          echo "✅ All manual tests passed!"
          exit 0
        else
          echo "❌ Some manual tests failed"
          exit 1
        fi